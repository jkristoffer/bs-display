---
import type { ImageMetadata } from 'astro';
import Button from '../../common/Button/Button.astro';
import { Image } from 'astro:assets';

interface Props {
  title: string;
  image: ImageMetadata;
  points: string[];
  recommendedModels: string;
  isReversed?: boolean;
}

const {
  title,
  image,
  points,
  recommendedModels,
  isReversed = false
} = Astro.props;
---

<section class={`usecase-section ${isReversed ? 'reversed' : ''}`}>
  <div class="usecase-image">
    <Image src={image} alt={title} height={380} width={380} />
  </div>
  <div class="usecase-content">
    <h3>{title}</h3>
    <div class="points">
      {points.map((point) => <p set:html={point} />)}
    </div>
    <div class="models">
      ðŸ“Œ Recommended Models: {recommendedModels}
    </div>
    <div class="cta-buttons">
      <Button variant="ghost" href="/contact">Book a Demo</Button>
      <Button variant="ghost" href="/contact">Request Quote</Button>
    </div>
  </div>
</section>

<style lang="scss">
  .usecase-section {
    display: flex;
    flex-direction: row;
    gap: calc(var(--padding-s1) * 2);
    padding: var(--padding-s1) 0;
    margin-bottom: var(--spacing-16);
    counter-increment: usecase-counter;
  }

  .usecase-section.reversed {
    flex-direction: row-reverse;
  }

  .usecase-image {
    flex: 1;
  }

  .usecase-image img {
    width: 100%;
    border-radius: 10px;
    border: 10px solid #eee;
    box-shadow: var(--shadow-md);
    box-sizing: border-box;
    transition: transform 0.3s ease;
  }

  .usecase-image img:hover {
    transform: scale(1.02);
  }

  .usecase-content {
    flex: 1.5;
    text-align: left;
  }

  h3 {
    color: #444;
    font-size: var(--text-subsection);
    text-transform: uppercase;
    margin-top: 0;
    position: relative;
    display: inline-block;
    padding-left: 40px;
  }

  h3::before {
    content: counter(usecase-counter);
    display: inline-block;
    width: 30px;
    height: 30px;
    background-color: var(--color-primary);
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    opacity: 0.8;
    z-index: 1;
    border-radius: 50%;
    color: #fff;
    text-align: center;
    font-size: 24px;
    line-height: 30px;
  }

  .points {
    margin: var(--spacing-8) 0;
  }

  .points p {
    margin-bottom: var(--spacing-4);
  }

  .models {
    font-weight: var(--font-weight-bold);
    margin: var(--spacing-8) 0;
    color: var(--color-primary);
  }

  .cta-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: var(--spacing-12);
  }

  @media (max-width: $breakpoint-md) {
    .usecase-section,
    .usecase-section.reversed {
      flex-direction: column-reverse;
      align-items: center;
    }

    .usecase-content {
      order: 1;
      text-align: center;
    }

    .usecase-image {
      order: 2;
      width: 80%;
      border-radius: 50%;
    }
    .cta-buttons {
      justify-content: center;
    }

    h3 {
      padding: 0;
    }
    .points :global(strong) {
      display: block;
    }
  }
</style>
