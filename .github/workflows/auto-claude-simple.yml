name: Auto-Claude Simple Processor
on:
  workflow_dispatch:
    inputs:
      triggered_by:
        description: 'User who triggered the command'
        required: false
      comment_url:
        description: 'URL of the triggering comment'
        required: false

jobs:
  process-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'dev/package-lock.json'
          
      - name: Install dependencies
        run: |
          cd dev
          npm ci
          
      - name: Install Claude Code CLI
        run: |
          # Install Claude Code CLI - correct installation method
          curl -fsSL https://raw.githubusercontent.com/anthropics/claude-code/main/install.sh | bash
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
          # Verify installation
          claude --version || echo "Claude CLI not found, trying alternative installation..."
          
          # Alternative: install via npm if above fails
          if ! command -v claude &> /dev/null; then
            npm install -g @anthropic/claude-code-cli || echo "npm installation failed"
          fi
          
      - name: Process GitHub issues
        run: |
          cd dev
          chmod +x scripts/process-github-issues.sh
          
          # Modify script to work without VPS
          cat > scripts/process-github-issues-simple.sh << 'EOF'
          #!/bin/bash
          set -e
          
          echo "ü§ñ Starting Auto-Claude Issue Processor (GitHub Actions)"
          
          # Get open issues with claude-task label
          echo "üîç Fetching open issues..."
          ISSUES=$(gh issue list \
            --state open \
            --label "claude-task" \
            --json number,title,body,labels \
            --limit 1)
          
          ISSUE_COUNT=$(echo "$ISSUES" | jq length)
          
          if [ "$ISSUE_COUNT" -eq 0 ]; then
            echo "‚ÑπÔ∏è No issues found with 'claude-task' label"
            exit 0
          fi
          
          # Process the first issue
          ISSUE_NUM=$(echo "$ISSUES" | jq -r '.[0].number')
          ISSUE_TITLE=$(echo "$ISSUES" | jq -r '.[0].title')
          ISSUE_BODY=$(echo "$ISSUES" | jq -r '.[0].body')
          
          echo "üéØ Processing Issue #$ISSUE_NUM: $ISSUE_TITLE"
          
          # Create working branch
          BRANCH_NAME="auto/issue-$ISSUE_NUM"
          git checkout -b "$BRANCH_NAME"
          
          # Mark issue as in-progress
          gh issue comment "$ISSUE_NUM" --body "ü§ñ **Auto-Claude Processing Started**
          
          Started processing this issue automatically.
          - Branch: \`$BRANCH_NAME\`
          - Time: $(date)
          - Runner: GitHub Actions
          
          Will create a PR if valid changes are generated."
          
          # Create prompt for Claude
          CLAUDE_PROMPT="$ISSUE_TITLE
          
          ## Issue Description
          $ISSUE_BODY
          
          ## Project Context
          This is the bs-display project - an Astro-based e-commerce platform for interactive displays.
          
          ## Instructions
          Please implement the requested changes following the project's development standards in CLAUDE.md."
          
          # Run Claude Code CLI
          echo "üß† Running Claude Code CLI..."
          if echo "$CLAUDE_PROMPT" | claude code --non-interactive; then
            echo "‚úÖ Claude Code CLI completed successfully"
          else
            CLAUDE_EXIT_CODE=$?
            echo "‚ùå Claude Code CLI failed (exit code: $CLAUDE_EXIT_CODE)"
            
            gh issue comment "$ISSUE_NUM" --body "ü§ñ **Processing Failed**
            
            Claude Code CLI encountered an error. This could mean:
            - The issue requires manual intervention
            - The request may need clarification
            
            Please review the issue or try processing manually."
            
            git checkout main 2>/dev/null || true
            git branch -D "$BRANCH_NAME" 2>/dev/null || true
            exit 1
          fi
          
          # Check if any changes were made
          if git diff --quiet && git diff --cached --quiet; then
            echo "‚ÑπÔ∏è No changes generated by Claude"
            gh issue comment "$ISSUE_NUM" --body "ü§ñ **No Changes Generated**
            
            Claude processed the issue but did not generate any code changes.
            Please review the issue requirements."
            
            git checkout main
            git branch -D "$BRANCH_NAME"
            exit 0
          fi
          
          echo "‚úÖ Changes detected, creating PR..."
          
          # Commit changes
          git add .
          git commit -m "feat: $ISSUE_TITLE
          
          Auto-generated implementation using Claude Code CLI
          
          Closes #$ISSUE_NUM
          
          ü§ñ Generated with Claude Code on GitHub Actions"
          
          # Push branch
          git push origin "$BRANCH_NAME"
          
          # Create PR
          gh pr create \
            --title "feat: $ISSUE_TITLE" \
            --body "## ü§ñ Automated Implementation
          
          This PR was automatically generated by Claude Code CLI to address issue #$ISSUE_NUM.
          
          ## Changes Made
          $(git log --oneline HEAD~1..HEAD)
          
          Closes #$ISSUE_NUM" \
            --label "automated" \
            --label "claude-generated"
          
          # Get PR URL and update issue
          PR_URL=$(gh pr view --json url -q .url)
          
          gh issue comment "$ISSUE_NUM" --body "ü§ñ **Pull Request Created**
          
          ‚úÖ Successfully generated implementation: $PR_URL
          
          The PR is ready for human review."
          
          echo "üéâ Successfully processed issue #$ISSUE_NUM"
          EOF
          
          chmod +x scripts/process-github-issues-simple.sh
          ./scripts/process-github-issues-simple.sh
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          
      - name: Report completion
        if: github.event.inputs.comment_url && always()
        run: |
          TRIGGERED_BY="${{ github.event.inputs.triggered_by }}"
          
          STATUS_MESSAGE="ü§ñ **Auto-Claude Completed**
          
          ‚úÖ Processing completed as requested by @$TRIGGERED_BY
          
          Check the repository for any new PRs that were created."
          
          gh api repos/${{ github.repository }}/issues/comments \
            --method POST \
            --field body="$STATUS_MESSAGE"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}