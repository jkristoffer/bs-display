name: Claude Code Fast Commit
on:
  issue_comment:
    types: [created]

jobs:
  fast-commit:
    if: startsWith(github.event.comment.body, '/commit') && github.event.comment.user.login == 'jkristoffer'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1  # Only latest commit for speed
          
      - name: Fast commit analysis and push
        run: |
          # Configure Git
          git config --global user.name "Claude Code AI"
          git config --global user.email "claude-code@anthropic.com"
          
          # Quick change check
          if git diff --quiet && git diff --cached --quiet; then
            echo "status=no-changes" >> $GITHUB_ENV
            exit 0
          fi
          
          # Get changed files (fast, no detailed diff)
          CHANGED_FILES=$(git diff --name-only)
          
          # Fast filtering - exclude unwanted files in one pass
          FILTERED_FILES=$(echo "$CHANGED_FILES" | grep -v -E '\.(log|tmp|cache)$|node_modules/|\.DS_Store|temp|\.git/' | grep -v '^\.\./' | tr '\n' ' ')
          
          if [ -z "$FILTERED_FILES" ]; then
            echo "status=no-relevant-changes" >> $GITHUB_ENV
            exit 0
          fi
          
          # Ultra-fast commit type detection
          COMMIT_TYPE="feat"
          SCOPE=""
          
          # Single-pass file analysis
          case "$CHANGED_FILES" in
            *\.md*|*README*|*docs/*) COMMIT_TYPE="docs" ;;
            *package*.json*) COMMIT_TYPE="chore" ;;
            *test*|*spec*) COMMIT_TYPE="test" ;;
            *\.css*|*\.scss*|*style*) COMMIT_TYPE="style" ;;
          esac
          
          # Quick scope detection
          case "$CHANGED_FILES" in
            *src/components/*) SCOPE="components" ;;
            *src/pages/*) SCOPE="pages" ;;
            *scripts/*) SCOPE="scripts" ;;
            *.github/workflows/*) SCOPE="ci" ;;
          esac
          
          # Simple description
          FILE_COUNT=$(echo "$CHANGED_FILES" | wc -w)
          if [ $FILE_COUNT -eq 1 ]; then
            DESCRIPTION="update $(basename $CHANGED_FILES)"
          else
            DESCRIPTION="update $FILE_COUNT files"
          fi
          
          # Build commit message
          if [ -n "$SCOPE" ]; then
            COMMIT_MSG="$COMMIT_TYPE($SCOPE): $DESCRIPTION"
          else
            COMMIT_MSG="$COMMIT_TYPE: $DESCRIPTION"
          fi
          
          # Stage, commit, and push in one block
          git add $FILTERED_FILES
          git commit -m "$COMMIT_MSG

          ü§ñ Generated with [Claude Code](https://claude.ai/code)

          Co-Authored-By: Claude <noreply@anthropic.com>"
          git push origin main
          
          # Store for reporting
          echo "commit_message=$COMMIT_MSG" >> $GITHUB_ENV
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_ENV
          
      - name: Fast report
        run: |
          if [ "${{ env.status }}" = "success" ]; then
            FILE_LIST=$(echo "${{ env.changed_files }}" | tr ' ' '\n' | head -5 | sed 's/^/‚Ä¢ /')
            gh api repos/${{ github.repository }}/issues/comments \
              --method POST \
              --field body="‚ö° **Fast Commit Completed** 
              
              **Message:** \`${{ env.commit_message }}\`
              **Files:** $(echo "${{ env.changed_files }}" | wc -w) files committed
              
              $FILE_LIST"
          elif [ "${{ env.status }}" = "no-changes" ]; then
            gh api repos/${{ github.repository }}/issues/comments \
              --method POST \
              --field body="‚ÑπÔ∏è **No changes to commit**"
          else
            gh api repos/${{ github.repository }}/issues/comments \
              --method POST \
              --field body="‚ö†Ô∏è **No relevant changes** (filtered out temp files)"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}