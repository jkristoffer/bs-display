---
import MainLayout from './MainLayout.astro';
import styles from '../components/layouts/UseCaseLayout.module.scss';

interface Props {
  title: string;
  description: string;
  publishDate: Date;
  industry: string;
  challenge: string;
  solution: string;
  results: string;
  clientName?: string;
  clientLogo?: string;
  featuredImage?: string;
  gallery?: string[];
  testimonial?: {
    quote: string;
    author: string;
    position?: string;
  };
  products?: string[];
  tags?: string[];
  canonicalUrl?: string;
}

const {
  title,
  description,
  publishDate,
  industry,
  challenge,
  solution,
  results,
  clientName,
  clientLogo,
  featuredImage,
  gallery,
  testimonial,
  products,
  tags,
  canonicalUrl
} = Astro.props;

// Format date if provided
const formattedDate = publishDate
  ? new Intl.DateTimeFormat('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    }).format(publishDate)
  : null;

// Generate canonical URL
const siteUrl = import.meta.env.SITE || Astro.url.origin;
const resolvedCanonicalUrl =
  canonicalUrl || new URL(Astro.url.pathname, siteUrl).href;

// Prepare structured data for use case
const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'Article',
  headline: title,
  description,
  datePublished: publishDate.toISOString(),
  ...(featuredImage && { image: new URL(featuredImage, siteUrl).href }),
  author: {
    '@type': 'Organization',
    name: 'BS Display'
  },
  publisher: {
    '@type': 'Organization',
    name: 'BS Display',
    url: siteUrl,
    logo: {
      '@type': 'ImageObject',
      url: new URL('/logo.png', siteUrl).href,
      width: 600,
      height: 60
    }
  },
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': resolvedCanonicalUrl
  },
  ...(clientName && {
    about: {
      '@type': 'Organization',
      name: clientName
    }
  })
};
---

<MainLayout
  title={title}
  description={description}
  ogTitle={title}
  ogDescription={description}
  ogImage={featuredImage}
  ogType="article"
  twitterCard="summary_large_image"
  twitterTitle={title}
  twitterDescription={description}
  twitterImage={featuredImage}
  canonicalUrl={resolvedCanonicalUrl}
  structuredData={JSON.stringify(structuredData)}
>
  <!-- Use Case Background Elements -->
  <div class={styles.useCaseBgElements}>
    <div class={styles.bgPattern}></div>
    <div class={`${styles.bgGlow} ${styles.bgGlow1}`}></div>
    <div class={`${styles.bgGlow} ${styles.bgGlow2}`}></div>
  </div>

  <!-- Hero Section -->
  <section class={styles.useCaseHero}>
    <div class={styles.heroContainer}>
      <div class={`${styles.heroContent} animate-fade-up`}>
        <div class={styles.heroBadge}>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M12 2L2 7L12 12L22 7L12 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M2 17L12 22L22 17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M2 12L12 17L22 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          {industry}
        </div>
        <h1 class={styles.heroTitle}>{title}</h1>
        <p class={styles.heroSubtitle}>{description}</p>
        <div class={styles.heroMeta}>
          {formattedDate && <time datetime={publishDate.toISOString()} class={styles.dateBadge}>{formattedDate}</time>}
          {clientName && <span class={styles.clientBadge}>Client: {clientName}</span>}
        </div>
      </div>
      
      {featuredImage && (
        <div class={`${styles.heroImage} animate-fade-up`}>
          <div class={`${styles.imageContainer} glass-light`}>
            <img src={featuredImage} alt={title} />
            <div class={styles.imageOverlay}></div>
          </div>
        </div>
      )}
    </div>
  </section>

  <div class={styles.useCaseContainer}>
    <article class={styles.useCaseContent}>

      <div class={styles.useCaseSection}>
        <h2>Challenge</h2>
        <div class={styles.sectionContent}>
          <p>{challenge}</p>
        </div>
      </div>

      <div class={styles.useCaseSection}>
        <h2>Solution</h2>
        <div class={styles.sectionContent}>
          <p>{solution}</p>
          <slot name="solution" />
        </div>
      </div>

      <div class={styles.useCaseSection}>
        <h2>Results</h2>
        <div class={styles.sectionContent}>
          <p>{results}</p>
          <slot name="results" />
        </div>
      </div>

      {testimonial && (
        <div class={styles.testimonial}>
          <blockquote>
            <p>"{testimonial.quote}"</p>
            <cite>
              {testimonial.author}
              {testimonial.position && <span>, {testimonial.position}</span>}
            </cite>
          </blockquote>
        </div>
      )}
      
      <slot />
    </article>
    
    <aside class={styles.useCaseSidebar}>
      {clientName && clientLogo && (
        <div class={styles.clientInfo}>
          <h3>About the Client</h3>
          <img src={clientLogo} alt={`${clientName} logo`} class={styles.clientLogo} />
          <p>{clientName}</p>
        </div>
      )}
      
      {products && products.length > 0 && (
        <div class="related-products">
          <h3>Related Products</h3>
          <ul class={styles.productsList}>
            {products.map((product) => (
              <li>{product}</li>
            ))}
          </ul>
        </div>
      )}
      
      {tags && tags.length > 0 && (
        <div class="tags-section">
          <h3>Tags</h3>
          <div class={styles.tags}>
            {tags.map((tag) => (
              <span class={styles.tag}>{tag}</span>
            ))}
          </div>
        </div>
      )}
    </aside>
    
    {gallery && gallery.length > 0 && (
      <section class={styles.gallerySection}>
        <h2>Gallery</h2>
        <div class={styles.gallery}>
          {gallery.map((image) => (
            <div class={styles.galleryItem}>
              <img src={image} alt="Project image" />
            </div>
          ))}
        </div>
      </section>
    )}
  </div>

</MainLayout>
