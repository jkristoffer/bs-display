name: SEO Expert Review Trigger

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'src/content/blog/**/*.md'
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to review'
        required: true
        type: string

jobs:
  seo-analysis:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'automated-content') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run SEO Analysis
      id: seo-analysis
      run: |
        # Run SEO analysis from project root
        PR_NUM="${{ github.event.pull_request.number || inputs.pr_number }}"
        
        # Run SEO analysis and capture output
        OUTPUT=$(node scripts/claude-seo.js seo-review --pr $PR_NUM --auto-comment false 2>&1) || true
        
        # Save output for later use
        echo "seo_output<<EOF" >> $GITHUB_OUTPUT
        echo "$OUTPUT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Extract score from output
        SCORE=$(echo "$OUTPUT" | grep -o "Average SEO Score: [0-9]*" | grep -o "[0-9]*" | head -1)
        echo "seo_score=$SCORE" >> $GITHUB_OUTPUT
        
        # Determine recommendation
        if [ "$SCORE" -ge 85 ]; then
          echo "recommendation=AUTO_APPROVE" >> $GITHUB_OUTPUT
        elif [ "$SCORE" -ge 75 ]; then
          echo "recommendation=APPROVE_WITH_SUGGESTIONS" >> $GITHUB_OUTPUT
        elif [ "$SCORE" -ge 65 ]; then
          echo "recommendation=NEEDS_WORK" >> $GITHUB_OUTPUT
        else
          echo "recommendation=MAJOR_REVISIONS" >> $GITHUB_OUTPUT
        fi
      
    - name: Comment SEO Analysis on PR
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ github.event.pull_request.number || inputs.pr_number }};
          const score = '${{ steps.seo-analysis.outputs.seo_score }}';
          const recommendation = '${{ steps.seo-analysis.outputs.recommendation }}';
          const output = `${{ steps.seo-analysis.outputs.seo_output }}`;
          
          function getScoreEmoji(score) {
            if (score >= 90) return '⭐⭐⭐⭐⭐';
            if (score >= 80) return '⭐⭐⭐⭐';
            if (score >= 70) return '⭐⭐⭐';
            if (score >= 60) return '⭐⭐';
            if (score >= 50) return '⭐';
            return '❌';
          }
          
          function getRecommendationText(rec) {
            switch(rec) {
              case 'AUTO_APPROVE': return '🚀 AUTO-APPROVE - Excellent SEO quality';
              case 'APPROVE_WITH_SUGGESTIONS': return '✅ APPROVE with minor suggestions';
              case 'NEEDS_WORK': return '🔧 NEEDS WORK - Address key issues first';
              case 'MAJOR_REVISIONS': return '❌ MAJOR REVISIONS REQUIRED';
              default: return '🔍 Analysis complete';
            }
          }
          
          const emoji = getScoreEmoji(parseInt(score));
          const recText = getRecommendationText(recommendation);
          
          const comment = `## 🤖 Claude SEO Expert Analysis
          
**SEO Score: ${score}/100 ${emoji}**
**Recommendation: ${recText}**

### 📊 Detailed Analysis

\`\`\`
${output}
\`\`\`

### 🎯 Next Steps

${recommendation === 'AUTO_APPROVE' ? 
  '- ✅ **Ready for publication** - SEO score exceeds quality threshold\n- 🚀 Consider auto-approving this PR' :
  recommendation === 'APPROVE_WITH_SUGGESTIONS' ?
  '- 🔧 **Minor optimizations recommended** before publishing\n- 📈 Focus on high-impact improvements listed above' :
  recommendation === 'NEEDS_WORK' ?
  '- ⚠️ **Improvements needed** before publishing\n- 🔥 Address priority issues first, then re-run analysis' :
  '- ❌ **Significant revisions required**\n- 🛠️ Major SEO improvements needed before publication'
}

### 🔄 Re-run Analysis

To re-run SEO analysis after making changes, comment:
\`/seo-review\` or trigger the workflow manually.

---
*Generated by Claude SEO Expert Agent*`;

          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: comment
          });
    
    - name: Add SEO Labels
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ github.event.pull_request.number || inputs.pr_number }};
          const score = parseInt('${{ steps.seo-analysis.outputs.seo_score }}');
          const recommendation = '${{ steps.seo-analysis.outputs.recommendation }}';
          
          const labels = ['seo-analyzed'];
          
          if (recommendation === 'AUTO_APPROVE') {
            labels.push('seo-excellent');
          } else if (recommendation === 'APPROVE_WITH_SUGGESTIONS') {
            labels.push('seo-good');
          } else if (recommendation === 'NEEDS_WORK') {
            labels.push('seo-needs-work');
          } else {
            labels.push('seo-major-issues');
          }
          
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            labels: labels
          });
    
    - name: Auto-approve high-quality content
      if: steps.seo-analysis.outputs.recommendation == 'AUTO_APPROVE'
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ github.event.pull_request.number || inputs.pr_number }};
          
          // Add approval
          await github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber,
            event: 'APPROVE',
            body: '🤖 Auto-approved by Claude SEO Expert Agent\n\nSEO score exceeds quality threshold (85+). Content is ready for publication.'
          });
          
          console.log('✅ Auto-approved PR due to excellent SEO score');
    
    - name: Request changes for poor content
      if: steps.seo-analysis.outputs.recommendation == 'MAJOR_REVISIONS'
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ github.event.pull_request.number || inputs.pr_number }};
          
          await github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber,
            event: 'REQUEST_CHANGES',
            body: '🤖 Changes requested by Claude SEO Expert Agent\n\nSEO score is below publication threshold. Please address the issues identified in the analysis above before proceeding.'
          });
          
          console.log('❌ Requested changes due to low SEO score');
    
    - name: Update PR status check
      uses: actions/github-script@v7
      with:
        script: |
          const score = parseInt('${{ steps.seo-analysis.outputs.seo_score }}');
          const recommendation = '${{ steps.seo-analysis.outputs.recommendation }}';
          
          const state = recommendation === 'MAJOR_REVISIONS' ? 'failure' : 'success';
          const description = `SEO Score: ${score}/100 - ${recommendation.replace(/_/g, ' ')}`;
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: state,
            target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            description: description,
            context: 'Claude SEO Expert'
          });
    
    - name: Summary
      run: |
        echo "## SEO Analysis Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **PR**: #${{ github.event.pull_request.number || inputs.pr_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Score**: ${{ steps.seo-analysis.outputs.seo_score }}/100" >> $GITHUB_STEP_SUMMARY
        echo "- **Recommendation**: ${{ steps.seo-analysis.outputs.recommendation }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: $([ '${{ steps.seo-analysis.outputs.recommendation }}' = 'AUTO_APPROVE' ] && echo 'Auto-approved ✅' || echo 'Review required 🔍')" >> $GITHUB_STEP_SUMMARY