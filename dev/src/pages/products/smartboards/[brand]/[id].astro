---
import ProductLayout from '../../../../layouts/ProductLayout.astro';
import { ProductDetails } from '../../../../components/products/ProductDetails';
import allModels from '../../../../data/models/models.all.js';
import {
  convertModelToProductInfo,
  generateProductSchema,
  generateBreadcrumbSchema
} from '../../../../utils/schema';

export function getStaticPaths() {
  return allModels.map((model) => ({
    params: {
      brand: model.brand.toLowerCase().replace(/\s+/g, '-'),
      id: model.id
    },
    props: { model }
  }));
}

const { model } = Astro.props;
const { brand, model: modelName } = model;

const title = `${brand} ${modelName} | Big Shine Display`;
const description = `Learn more about the ${brand} ${modelName} interactive smart board. View specifications, features, and request a quote.`;

// Generate structured data for SEO
const baseUrl = Astro.site
  ? new URL(Astro.url.pathname, Astro.site).href
  : 'https://bigshine.display';
const productInfo = convertModelToProductInfo(model, 'smartboards', baseUrl);
const productSchema = generateProductSchema(productInfo);

// Generate breadcrumb schema
const breadcrumbItems = [
  { label: 'Home', path: '/' },
  { label: 'Products', path: '/products/' },
  { label: 'Smart Boards', path: '/products/smartboards/' },
  { 
    label: brand,
    path: `/products/smartboards/${brand.toLowerCase().replace(/\s+/g, '-')}/`
  },
  { label: modelName }
];
console.log(breadcrumbItems);
const breadcrumbSchema = generateBreadcrumbSchema({
  items: breadcrumbItems.map((item, index) => ({
    name: item.label,
    item: item.path
      ? new URL(
          item.path.startsWith('/') ? item.path.slice(1) : item.path,
          baseUrl
        ).href
      : baseUrl,
    position: index + 1
  }))
});
---

<ProductLayout title={title} description={description}>
  <!-- JSON-LD structured data for SEO -->
  <script is:inline type="application/ld+json" set:html={productSchema} />
  <script is:inline type="application/ld+json" set:html={breadcrumbSchema} />

  <section class="product-detail-section">
    <div class="container--wide">
      <div class="product-detail-container glass-container">
        <ProductDetails model={model} productType="smartboards" client:visible />
      </div>
    </div>
  </section>
</ProductLayout>

<style lang="scss">
  .product-detail-section {
    padding: var(--space-section) 0;
    background: linear-gradient(135deg, 
      rgba(255, 255, 255, 0.05) 0%, 
      rgba(255, 255, 255, 0.02) 100%);
    min-height: 100vh;
  }

  .glass-container {
    background: var(--glass-bg);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: var(--radius-card);
    box-shadow: var(--shadow-lg);
    padding: 2rem;
    margin-bottom: 2rem;
    position: relative;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 2px;
      background: var(--gradient-primary);
      border-radius: var(--radius-card) var(--radius-card) 0 0;
    }
  }

  @media (max-width: 768px) {
    .glass-container {
      padding: 1.5rem;
    }
  }

  @media (max-width: 480px) {
    .glass-container {
      padding: 1rem;
    }
  }
}</style>
