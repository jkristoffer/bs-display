---
import MainLayout from './MainLayout.astro';

interface Props {
  title: string;
  description: string;
  publishDate?: Date;
  author?: string;
  category?: string;
  image?: string;
  canonicalUrl?: string;
}

const { 
  title, 
  description, 
  publishDate, 
  author, 
  category, 
  image, 
  canonicalUrl 
} = Astro.props;

// Format date if provided
const formattedDate = publishDate 
  ? new Intl.DateTimeFormat('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    }).format(publishDate)
  : null;

// Generate canonical URL
const siteUrl = import.meta.env.SITE || Astro.url.origin;
const resolvedCanonicalUrl = canonicalUrl || new URL(Astro.url.pathname, siteUrl).href;

// Prepare structured data for blog post
const structuredData = publishDate && author ? {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: title,
  description,
  datePublished: publishDate.toISOString(),
  author: {
    '@type': 'Person',
    name: author
  },
  ...(image && { image: new URL(image, siteUrl).href }),
  ...(category && { keywords: category }),
  publisher: {
    '@type': 'Organization',
    name: 'BS Display',
    url: siteUrl,
    logo: {
      '@type': 'ImageObject',
      url: new URL('/logo.png', siteUrl).href,
      width: 600,
      height: 60
    }
  },
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': resolvedCanonicalUrl
  }
} : null;
---

<MainLayout 
  title={title} 
  description={description}
  ogTitle={title}
  ogDescription={description}
  ogImage={image}
  ogType="article"
  twitterCard="summary_large_image"
  twitterTitle={title}
  twitterDescription={description}
  twitterImage={image}
  canonicalUrl={resolvedCanonicalUrl}
  structuredData={structuredData ? JSON.stringify(structuredData) : undefined}
>
  <div class="blog-container">
    {publishDate && author && (
      <div class="blog-meta">
        {category && <span class="blog-category">{category}</span>}
        <time datetime={publishDate.toISOString()}>{formattedDate}</time>
        <span class="blog-author">By {author}</span>
      </div>
    )}
    <article class="blog-content">
      <slot />
    </article>
  </div>
  <style>
    .blog-container {
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem 1.5rem;
    }

    .blog-meta {
      margin-bottom: 2rem;
      font-size: 0.9rem;
      color: #666;
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
    }

    .blog-category {
      background-color: #f0f0f0;
      padding: 0.25rem 0.75rem;
      border-radius: 1rem;
      font-weight: 500;
    }

    .blog-content {
      line-height: 1.8;
    }

    .blog-content :global(h1),
    .blog-content :global(h2),
    .blog-content :global(h3),
    .blog-content :global(h4) {
      margin-top: 2rem;
      margin-bottom: 1rem;
    }

    .blog-content :global(img) {
      max-width: 100%;
      height: auto;
      border-radius: 0.5rem;
      margin: 1.5rem 0;
    }

    .blog-content :global(blockquote) {
      border-left: 4px solid #ddd;
      padding-left: 1rem;
      font-style: italic;
      margin: 1.5rem 0;
      color: #555;
    }

    .blog-content :global(pre) {
      background-color: #f5f5f5;
      padding: 1rem;
      border-radius: 0.5rem;
      overflow-x: auto;
      margin: 1.5rem 0;
    }

    .blog-content :global(p) {
      margin-bottom: 1.5rem;
    }

    .blog-content :global(ul),
    .blog-content :global(ol) {
      margin-bottom: 1.5rem;
      padding-left: 1.5rem;
    }
  </style>
</MainLayout>
