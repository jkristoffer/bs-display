**Forge.py Main Components:**

## Core Architecture
- **AI-First Orchestrator**: Python CLI tool for AI-driven file generation via Claude CLI
- **Framework**: Built with Typer for CLI interface and Pydantic for data validation

## Data Models (lines 30-48)
- `PromptRequest`: User input validation
- `FileSpec`: Single file specification with path/content
- `ClaudeResponse`: Single response validation  
- `MultiFileResponse`: Multiple file container

## Core Functions
- **`parse_multi_file_response`** (51-91): Parses Claude responses with "FILE:" markers into multiple files
- **`call_claude`** (210-281): Main Claude CLI interface with markdown cleanup and tool call detection
- **`strip_markdown_formatting`** (153-173): Removes code blocks from Claude responses
- **`detect_tool_calls`** (176-207): Identifies JSON tool requests in responses

## CLI Commands  
1. **`create_file`** (284-327): Single file generation from prompt
2. **`create_files`** (330-413): Multi-file generation with special formatting
3. **`analyze`** (416-459): Context-aware codebase analysis with tool awareness

## Key Features
- Comprehensive error handling with logging
- Multi-file output parsing via regex patterns
- Context-aware prompting for analysis tasks
- Automatic directory creation for output files