---
import MainLayout from './MainLayout.astro';
import RelatedBlogPosts from '../components/blog/RelatedBlogPosts.astro';

interface Props {
  title: string;
  description: string;
  publishDate?: Date;
  author?: string;
  category?: string;
  image?: string;
  canonicalUrl?: string;
}

const {
  title,
  description,
  publishDate,
  author,
  category,
  image,
  canonicalUrl
} = Astro.props;

// Format date if provided
const formattedDate = publishDate
  ? new Intl.DateTimeFormat('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    }).format(publishDate)
  : null;

// Generate canonical URL
const siteUrl = import.meta.env.SITE || Astro.url.origin;
const resolvedCanonicalUrl =
  canonicalUrl || new URL(Astro.url.pathname, siteUrl).href;

// Prepare structured data for blog post
const structuredData =
  publishDate && author
    ? {
        '@context': 'https://schema.org',
        '@type': 'BlogPosting',
        headline: title,
        description,
        datePublished: publishDate.toISOString(),
        author: {
          '@type': 'Person',
          name: author
        },
        ...(image && { image: new URL(image, siteUrl).href }),
        ...(category && { keywords: category }),
        publisher: {
          '@type': 'Organization',
          name: 'BS Display',
          url: siteUrl,
          logo: {
            '@type': 'ImageObject',
            url: new URL('/logo.png', siteUrl).href,
            width: 600,
            height: 60
          }
        },
        mainEntityOfPage: {
          '@type': 'WebPage',
          '@id': resolvedCanonicalUrl
        }
      }
    : null;
---

<MainLayout
  title={title}
  description={description}
  ogTitle={title}
  ogDescription={description}
  ogImage={image}
  ogType="article"
  twitterCard="summary_large_image"
  twitterTitle={title}
  twitterDescription={description}
  twitterImage={image}
  canonicalUrl={resolvedCanonicalUrl}
  structuredData={structuredData ? JSON.stringify(structuredData) : undefined}
>
  <!-- Blog Background Elements -->
  <div class="blog-bg-elements">
    <div class="bg-pattern"></div>
    <div class="bg-glow bg-glow-1"></div>
    <div class="bg-glow bg-glow-2"></div>
  </div>

  <div class="blog-article-modern">
    <!-- Hero Section -->
    <header class="article-hero">
      <div class="hero-content">
        <div class="article-meta">
          {category && (
            <span class="category-badge">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                <path d="M7 7H17V17H7Z" stroke="currentColor" stroke-width="2"/>
                <path d="M3 3V8H8" stroke="currentColor" stroke-width="2"/>
              </svg>
              {category}
            </span>
          )}
          {publishDate && (
            <time datetime={publishDate.toISOString()} class="publish-date">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
                <polyline points="12 6 12 12 16 14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              {formattedDate}
            </time>
          )}
        </div>
        
        <h1 class="article-title animate-fade-up">{title}</h1>
        
        <div class="article-description animate-fade-up">
          <p>{description}</p>
        </div>
        
        {author && (
          <div class="author-section animate-fade-up">
            <div class="author-avatar">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M20 21V19C20 17.9 19.1 17 18 17H6C4.9 17 4 17.9 4 19V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <circle cx="12" cy="7" r="4" stroke="currentColor" stroke-width="2"/>
              </svg>
            </div>
            <div class="author-info">
              <span class="author-name">By {author}</span>
              <span class="author-title">Content Specialist</span>
            </div>
          </div>
        )}
        
        <!-- Reading Progress Bar -->
        <div class="reading-progress">
          <div class="progress-bar" id="reading-progress-bar"></div>
        </div>
      </div>
      
      <!-- Article Image -->
      {image && (
        <div class="hero-image animate-fade-up">
          <img src={image} alt={title} loading="lazy" />
          <div class="image-overlay"></div>
        </div>
      )}
    </header>

    <!-- Article Content -->
    <div class="article-container">
      <aside class="table-of-contents glass-light">
        <h3>Table of Contents</h3>
        <nav id="toc-nav">
          <!-- TOC will be generated by JavaScript -->
        </nav>
      </aside>
      
      <article class="article-content glass-white animate-fade-up">
        <div class="content-wrapper">
          <slot />
        </div>
        
        <!-- Article Actions -->
        <div class="article-actions">
          <div class="share-buttons">
            <span class="share-label">Share this article</span>
            <div class="share-icons">
              <button class="share-btn button-glass" data-share="twitter">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <path d="M23 3A10.9 10.9 0 0 1 20.1 4.7C19.2 3.9 18 3.4 16.7 3.4C14.2 3.4 12.2 5.4 12.2 7.9C12.2 8.3 12.2 8.6 12.3 8.9C8.7 8.7 5.6 6.9 3.6 4.2C3.2 4.9 3 5.7 3 6.6C3 8.3 3.9 9.8 5.2 10.7C4.4 10.7 3.7 10.4 3.1 10V10.1C3.1 12.3 4.7 14.1 6.8 14.5C6.4 14.6 6 14.6 5.6 14.6C5.3 14.6 5 14.6 4.7 14.5C5.3 16.3 7 17.6 9.1 17.6C7.5 18.8 5.5 19.5 3.3 19.5C2.9 19.5 2.6 19.5 2.2 19.4C4.3 20.7 6.8 21.4 9.4 21.4C16.7 21.4 20.7 14.7 20.7 8.5V7.9C21.5 7.4 22.2 6.7 22.7 5.9C22 6.2 21.2 6.4 20.4 6.5C21.2 6.1 21.9 5.4 22.2 4.6C21.4 5 20.5 5.3 19.6 5.4C18.8 4.6 17.7 4.1 16.5 4.1Z" stroke="currentColor" stroke-width="2"/>
                </svg>
              </button>
              <button class="share-btn button-glass" data-share="linkedin">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <path d="M16 8C18.21 8 20 9.79 20 12V21H16V12C16 11.45 15.55 11 15 11S14 11.45 14 12V21H10V12C10 9.79 11.79 8 14 8H16Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  <rect x="2" y="9" width="4" height="12" stroke="currentColor" stroke-width="2"/>
                  <circle cx="4" cy="4" r="2" stroke="currentColor" stroke-width="2"/>
                </svg>
              </button>
              <button class="share-btn button-glass" data-share="copy">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <rect x="9" y="9" width="13" height="13" rx="2" ry="2" stroke="currentColor" stroke-width="2"/>
                  <path d="M5 15H4C2.9 15 2 14.1 2 13V4C2 2.9 2.9 2 4 2H13C14.1 2 15 2.9 15 4V5" stroke="currentColor" stroke-width="2"/>
                </svg>
              </button>
            </div>
          </div>
          
          <!-- Article Tags -->
          {category && (
            <div class="article-tags">
              <span class="tags-label">Filed under:</span>
              <span class="tag button-faint">{category}</span>
            </div>
          )}
        </div>
      </article>
      
      <!-- Sidebar -->
      <aside class="article-sidebar">
        <div class="sidebar-widget glass-light">
          <h4>Key Takeaways</h4>
          <div class="takeaways" id="key-takeaways">
            <!-- Generated from content headings -->
          </div>
        </div>
        
        <div class="sidebar-widget glass-light">
          <h4>Reading Stats</h4>
          <div class="reading-stats">
            <div class="stat-item">
              <span class="stat-icon">üìñ</span>
              <div class="stat-content">
                <div class="stat-number" id="word-count">0</div>
                <div class="stat-label">Words</div>
              </div>
            </div>
            <div class="stat-item">
              <span class="stat-icon">‚è±Ô∏è</span>
              <div class="stat-content">
                <div class="stat-number" id="read-time">5</div>
                <div class="stat-label">Min Read</div>
              </div>
            </div>
          </div>
        </div>
      </aside>
    </div>
  </div>

  {/* Add related blog posts component */}
  <RelatedBlogPosts
    currentSlug={Astro.url.pathname.split('/').pop() || ''}
    category={category}
  />

  <style lang="scss">
    /* Blog Article Background */
    .blog-bg-elements {
      position: fixed;
      inset: 0;
      z-index: -1;
      pointer-events: none;
      overflow: hidden;
    }

    .bg-pattern {
      position: absolute;
      inset: 0;
      background-image: 
        radial-gradient(circle at 20% 80%, rgba(59, 130, 246, 0.02) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(16, 185, 129, 0.02) 0%, transparent 50%);
    }

    .bg-glow {
      position: absolute;
      border-radius: 50%;
      filter: blur(100px);
      opacity: 0.03;
    }

    .bg-glow-1 {
      width: 400px;
      height: 400px;
      background: radial-gradient(circle, #3b82f6 0%, transparent 70%);
      top: -200px;
      right: -200px;
      animation: glow1Float 25s ease-in-out infinite;
    }

    .bg-glow-2 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, #10b981 0%, transparent 70%);
      bottom: -150px;
      left: -150px;
      animation: glow2Float 20s ease-in-out infinite reverse;
    }

    /* Modern Blog Article Layout */
    .blog-article-modern {
      position: relative;
      background: linear-gradient(180deg, #ffffff 0%, #f8fafb 100%);
      min-height: 100vh;
    }

    /* Article Hero Section */
    .article-hero {
      padding: var(--space-section) 0;
      background: linear-gradient(135deg, rgba(59, 130, 246, 0.05) 0%, rgba(16, 185, 129, 0.05) 100%);
      position: relative;
      overflow: hidden;
    }

    .hero-content {
      max-width: var(--container-default);
      margin: 0 auto;
      padding: 0 var(--space-md);
      text-align: center;
      position: relative;
      z-index: 2;
    }

    .article-meta {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: var(--space-lg);
      margin-bottom: var(--space-lg);
      flex-wrap: wrap;
    }

    .category-badge {
      display: inline-flex;
      align-items: center;
      gap: var(--space-xs);
      padding: var(--space-sm) var(--space-md);
      background: var(--gradient-primary);
      color: white;
      border-radius: var(--radius-full);
      font-size: var(--text-body);
      font-weight: var(--font-weight-semibold);
      text-transform: uppercase;
      letter-spacing: var(--letter-spacing-wide);
      box-shadow: var(--shadow-md);
      
      svg {
        width: 16px;
        height: 16px;
      }
    }

    .publish-date {
      display: inline-flex;
      align-items: center;
      gap: var(--space-xs);
      color: var(--color-text-secondary);
      font-size: var(--text-body);
      font-weight: var(--font-weight-medium);
      
      svg {
        width: 16px;
        height: 16px;
      }
    }

    .article-title {
      font-size: var(--text-hero);
      font-weight: var(--font-weight-bold);
      line-height: var(--text-hero-line-height);
      color: var(--color-text-primary);
      margin: 0 0 var(--space-lg) 0;
      background: var(--gradient-primary);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .article-description {
      max-width: 700px;
      margin: 0 auto var(--space-xl) auto;
      
      p {
        font-size: var(--text-subsection);
        line-height: var(--text-body-line-height);
        color: var(--color-text-secondary);
        margin: 0;
      }
    }

    .author-section {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: var(--space-md);
      margin-bottom: var(--space-xl);
    }

    .author-avatar {
      width: 64px;
      height: 64px;
      border-radius: 50%;
      background: var(--gradient-primary);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      box-shadow: var(--shadow-lg);
      
      svg {
        width: 24px;
        height: 24px;
      }
    }

    .author-info {
      display: flex;
      flex-direction: column;
      gap: var(--space-xs);
      text-align: left;
    }

    .author-name {
      font-size: var(--text-subsection);
      font-weight: var(--font-weight-bold);
      color: var(--color-text-primary);
    }

    .author-title {
      font-size: var(--text-body);
      color: var(--color-text-secondary);
    }

    /* Reading Progress Bar */
    .reading-progress {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: rgba(59, 130, 246, 0.1);
      z-index: 1000;
    }

    .progress-bar {
      height: 100%;
      background: var(--gradient-primary);
      width: 0%;
      transition: width 0.1s ease;
    }

    /* Hero Image */
    .hero-image {
      max-width: 900px;
      margin: 0 auto;
      border-radius: var(--border-radius-lg);
      overflow: hidden;
      box-shadow: var(--shadow-2xl);
      position: relative;
      
      img {
        width: 100%;
        height: auto;
        display: block;
      }
    }

    .image-overlay {
      position: absolute;
      inset: 0;
      background: linear-gradient(
        135deg,
        rgba(59, 130, 246, 0.1) 0%, 
        rgba(139, 92, 246, 0.1) 100%
      );
      opacity: 0.5;
    }

    /* Article Container */
    .article-container {
      max-width: var(--container-default);
      margin: 0 auto;
      padding: var(--space-section) var(--space-md);
      display: grid;
      grid-template-columns: 250px 1fr 200px;
      gap: var(--space-xl);
      align-items: start;
      
      @media (max-width: $breakpoint-lg) {
        grid-template-columns: 1fr;
        gap: var(--space-lg);
      }
    }

    /* Table of Contents */
    .table-of-contents {
      position: sticky;
      top: var(--space-lg);
      background: var(--glass-bg);
      backdrop-filter: var(--glass-backdrop);
      border: 1px solid var(--glass-border);
      border-radius: var(--border-radius-card);
      padding: var(--space-card);
      max-height: 70vh;
      overflow-y: auto;
      
      h3 {
        font-size: var(--text-subsection);
        font-weight: var(--font-weight-bold);
        color: var(--color-text-primary);
        margin: 0 0 var(--space-md) 0;
        border-bottom: 2px solid var(--color-border-light);
        padding-bottom: var(--space-sm);
      }
      
      @media (max-width: $breakpoint-lg) {
        order: 2;
        position: static;
      }
    }

    #toc-nav {
      ul {
        list-style: none;
        padding: 0;
        margin: 0;
        
        li {
          margin-bottom: var(--space-xs);
          
          a {
            display: block;
            padding: var(--space-xs) var(--space-sm);
            color: var(--color-text-secondary);
            text-decoration: none;
            border-radius: var(--radius-sm);
            font-size: var(--text-body);
            transition: all var(--duration-normal) var(--ease-smooth);
            
            &:hover, &.active {
              background: rgba(59, 130, 246, 0.1);
              color: #3b82f6;
              transform: translateX(4px);
            }
          }
        }
      }
    }

    /* Article Content */
    .article-content {
      background: var(--glass-bg);
      backdrop-filter: var(--glass-backdrop);
      border: 1px solid var(--glass-border);
      border-radius: var(--border-radius-lg);
      box-shadow: var(--shadow-xl);
      overflow: hidden;
      
      @media (max-width: $breakpoint-lg) {
        order: 1;
      }
    }

    .content-wrapper {
      padding: var(--space-card);
      line-height: 1.8;
      
      /* Enhanced Typography */
      :global(h1), :global(h2), :global(h3), :global(h4), :global(h5), :global(h6) {
        font-weight: var(--font-weight-bold);
        color: var(--color-text-primary);
        margin: calc(var(--space-lg) * 1.5) 0 var(--space-lg) 0;
        line-height: 1.3;
        
        &:first-child {
          margin-top: 0;
        }
      }
      
      :global(h2) {
        font-size: var(--text-section);
        padding-bottom: var(--space-sm);
        border-bottom: 2px solid var(--color-border-light);
      }
      
      :global(h3) {
        font-size: var(--text-subsection);
        color: #3b82f6;
      }
      
      :global(p) {
        font-size: var(--text-body);
        line-height: var(--text-body-line-height);
        color: var(--color-text-primary);
        margin-bottom: var(--space-lg);
      }
      
      :global(img) {
        max-width: 100%;
        height: auto;
        border-radius: var(--border-radius-card);
        margin: var(--space-xl) 0;
        box-shadow: var(--shadow-lg);
      }
      
      :global(blockquote) {
        background: var(--glass-bg);
        border-left: 4px solid var(--gradient-primary);
        padding: var(--space-lg);
        margin: var(--space-xl) 0;
        border-radius: 0 var(--border-radius-card) var(--border-radius-card) 0;
        font-style: italic;
        color: var(--color-text-secondary);
        box-shadow: var(--shadow-md);
        
        p:last-child {
          margin-bottom: 0;
        }
      }
      
      :global(pre) {
        background: var(--color-surface-muted);
        padding: var(--space-lg);
        border-radius: var(--border-radius-card);
        overflow-x: auto;
        margin: var(--space-xl) 0;
        border: 1px solid var(--color-border-light);
        
        code {
          font-family: var(--font-mono);
          font-size: 14px;
        }
      }
      
      :global(ul), :global(ol) {
        margin-bottom: var(--space-lg);
        padding-left: var(--space-xl);
        
        li {
          margin-bottom: var(--space-sm);
          line-height: var(--text-body-line-height);
        }
      }
      
      :global(a) {
        color: #3b82f6;
        text-decoration: none;
        font-weight: var(--font-weight-medium);
        transition: all var(--duration-normal) var(--ease-smooth);
        
        &:hover {
          background: var(--gradient-primary);
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
          background-clip: text;
          text-decoration: underline;
        }
      }
    }

    /* Article Actions */
    .article-actions {
      padding: var(--space-card);
      border-top: 1px solid var(--color-border-light);
      background: var(--color-surface-muted);
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: var(--space-lg);
    }

    .share-buttons {
      display: flex;
      align-items: center;
      gap: var(--space-md);
    }

    .share-label {
      font-size: var(--text-body);
      font-weight: var(--font-weight-semibold);
      color: var(--color-text-primary);
    }

    .share-icons {
      display: flex;
      gap: var(--space-sm);
    }

    .share-btn {
      width: 44px;
      height: 44px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all var(--duration-normal) var(--ease-smooth);
      
      &:hover {
        transform: translateY(-2px);
      }
      
      svg {
        width: 20px;
        height: 20px;
      }
    }

    .article-tags {
      display: flex;
      align-items: center;
      gap: var(--space-sm);
      flex-wrap: wrap;
    }

    .tags-label {
      font-size: var(--text-body);
      color: var(--color-text-secondary);
    }

    .tag {
      font-size: var(--text-body);
      padding: var(--space-xs) var(--space-sm);
    }

    /* Article Sidebar */
    .article-sidebar {
      display: flex;
      flex-direction: column;
      gap: var(--space-lg);
      
      @media (max-width: $breakpoint-lg) {
        order: 3;
        grid-column: 1;
      }
    }

    .sidebar-widget {
      background: var(--glass-bg);
      backdrop-filter: var(--glass-backdrop);
      border: 1px solid var(--glass-border);
      border-radius: var(--border-radius-card);
      padding: var(--space-card);
      position: sticky;
      top: var(--space-lg);
      
      h4 {
        font-size: var(--text-subsection);
        font-weight: var(--font-weight-bold);
        color: var(--color-text-primary);
        margin: 0 0 var(--space-md) 0;
        border-bottom: 2px solid var(--color-border-light);
        padding-bottom: var(--space-sm);
      }
    }

    .reading-stats {
      display: flex;
      flex-direction: column;
      gap: var(--space-md);
    }

    .stat-item {
      display: flex;
      align-items: center;
      gap: var(--space-sm);
    }

    .stat-icon {
      font-size: 24px;
    }

    .stat-number {
      font-size: var(--text-subsection);
      font-weight: var(--font-weight-bold);
      color: var(--color-text-primary);
      line-height: 1;
    }

    .stat-label {
      font-size: var(--text-body);
      color: var(--color-text-secondary);
      line-height: 1;
    }

    /* Animations */
    @keyframes glow1Float {
      0%, 100% { transform: translate(0, 0) rotate(0deg); }
      50% { transform: translate(-20px, -15px) rotate(180deg); }
    }

    @keyframes glow2Float {
      0%, 100% { transform: translate(0, 0) rotate(0deg); }
      50% { transform: translate(15px, -10px) rotate(-180deg); }
    }

    /* Responsive Design */
    @media (max-width: $breakpoint-sm) {
      .article-meta {
        flex-direction: column;
        gap: var(--space-sm);
      }
      
      .author-section {
        flex-direction: column;
        text-align: center;
      }
      
      .author-info {
        text-align: center;
      }
      
      .article-actions {
        flex-direction: column;
        align-items: stretch;
        text-align: center;
      }
      
      .share-buttons {
        justify-content: center;
      }
    }

    /* Reduced Motion */
    @media (prefers-reduced-motion: reduce) {
      * {
        animation: none !important;
        transition: none !important;
      }
      
      .progress-bar {
        transition: none;
      }
    }
  </style>
  
  <script>
    // Table of Contents Generation
    document.addEventListener('DOMContentLoaded', () => {
      const tocNav = document.getElementById('toc-nav');
      const headings = document.querySelectorAll('.content-wrapper h2, .content-wrapper h3');
      const progressBar = document.getElementById('reading-progress-bar');
      const wordCountEl = document.getElementById('word-count');
      const readTimeEl = document.getElementById('read-time');
      
      // Generate TOC
      if (tocNav && headings.length > 0) {
        const tocList = document.createElement('ul');
        
        headings.forEach((heading, index) => {
          const id = `heading-${index}`;
          heading.id = id;
          
          const listItem = document.createElement('li');
          const link = document.createElement('a');
          link.href = `#${id}`;
          link.textContent = heading.textContent;
          link.addEventListener('click', (e) => {
            e.preventDefault();
            heading.scrollIntoView({ behavior: 'smooth' });
          });
          
          listItem.appendChild(link);
          tocList.appendChild(listItem);
        });
        
        tocNav.appendChild(tocList);
      }
      
      // Reading Progress
      function updateReadingProgress() {
        const winScroll = window.pageYOffset || document.documentElement.scrollTop;
        const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
        const scrolled = (winScroll / height) * 100;
        
        if (progressBar) {
          progressBar.style.width = scrolled + '%';
        }
      }
      
      window.addEventListener('scroll', updateReadingProgress);
      
      // Word Count and Reading Time
      const contentText = document.querySelector('.content-wrapper')?.textContent || '';
      const wordCount = contentText.trim().split(/\s+/).length;
      const readingTime = Math.ceil(wordCount / 200); // 200 words per minute
      
      if (wordCountEl) wordCountEl.textContent = wordCount.toLocaleString();
      if (readTimeEl) readTimeEl.textContent = readingTime;
      
      // Share Functionality
      const shareButtons = document.querySelectorAll('.share-btn');
      shareButtons.forEach(btn => {
        btn.addEventListener('click', () => {
          const shareType = btn.getAttribute('data-share');
          const url = window.location.href;
          const title = document.title;
          
          switch (shareType) {
            case 'twitter':
              window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${encodeURIComponent(title)}`, '_blank');
              break;
            case 'linkedin':
              window.open(`https://linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`, '_blank');
              break;
            case 'copy':
              navigator.clipboard.writeText(url).then(() => {
                btn.innerHTML = '<svg width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>';
                setTimeout(() => {
                  btn.innerHTML = '<svg width="20" height="20" viewBox="0 0 24 24" fill="none"><rect x="9" y="9" width="13" height="13" rx="2" ry="2" stroke="currentColor" stroke-width="2"/><path d="M5 15H4C2.9 15 2 14.1 2 13V4C2 2.9 2.9 2 4 2H13C14.1 2 15 2.9 15 4V5" stroke="currentColor" stroke-width="2"/></svg>';
                }, 2000);
              });
              break;
          }
        });
      });
      
      // Active TOC highlighting
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const id = entry.target.id;
            const activeLink = tocNav?.querySelector(`a[href="#${id}"]`);
            
            // Remove all active classes
            tocNav?.querySelectorAll('a').forEach(link => link.classList.remove('active'));
            
            // Add active class to current link
            if (activeLink) {
              activeLink.classList.add('active');
            }
          }
        });
      }, {
        rootMargin: '-20% 0% -80% 0%'
      });
      
      headings.forEach(heading => observer.observe(heading));
    });
  </script>

</MainLayout>
