---
import { allModels } from '../../data/models/models.all.js';

interface QuickGuide {
  title: string;
  description: string;
  category: string;
  insights: string[];
  icon: string;
  relatedProducts?: any[];
}

// Generate data-driven quick guides based on actual product data
const touchTechnologies = [...new Set(allModels.map((m: any) => m.touchTechnology).filter(Boolean))];
const resolutions = [...new Set(allModels.map((m: any) => m.resolution).filter(Boolean))];
const brands = [...new Set(allModels.map((m: any) => m.brand).filter(Boolean))];
const sizeRange = {
  min: Math.min(...allModels.map((m: any) => m.size || 0)),
  max: Math.max(...allModels.map((m: any) => m.size || 0))
};

// Find models with specific features for recommendations
const androidModels = allModels.filter((m: any) => 
  m.features?.some((f: string) => f.toLowerCase().includes('android'))
);

const wirelessModels = allModels.filter((m: any) => 
  m.features?.some((f: string) => f.toLowerCase().includes('wireless'))
);

const highResModels = allModels.filter((m: any) => 
  m.resolution?.includes('4K')
);

const quickGuides: QuickGuide[] = [
  {
    title: 'Touch Technology Comparison',
    description: `Compare ${touchTechnologies.join(', ')} touch technologies available in our interactive displays`,
    category: 'Technology',
    icon: 'üëÜ',
    insights: [
      `${touchTechnologies.length} different touch technologies available`,
      'Infrared works with gloves and styluses',
      'Capacitive provides precise multi-touch interaction',
      'Choose based on your environment and usage needs'
    ],
    relatedProducts: allModels.slice(0, 3)
  },
  {
    title: 'Size Selection Guide',
    description: `How to choose the right size from our ${sizeRange.min}" to ${sizeRange.max}" range for your space and audience`,
    category: 'Planning',
    icon: 'üìè',
    insights: [
      `Available sizes: ${sizeRange.min}" to ${sizeRange.max}"`,
      'Room size determines optimal viewing distance',
      'Larger displays better for collaboration',
      'Consider ceiling height for wall mounting'
    ]
  },
  {
    title: 'Resolution & Display Quality',
    description: `Understanding ${resolutions.join(', ')} resolutions and their impact on image clarity and text readability`,
    category: 'Technology',
    icon: 'üì∫',
    insights: [
      `Available resolutions: ${resolutions.join(', ')}`,
      '4K UHD provides crystal-clear text and images',
      'Higher resolution better for detailed content',
      'Consider viewing distance when choosing resolution'
    ],
    relatedProducts: highResModels.slice(0, 2)
  },
  {
    title: 'Smart Features & Software',
    description: `Built-in Android systems, wireless connectivity, and software options across our ${brands.length} brand portfolio`,
    category: 'Features',
    icon: 'üíª',
    insights: [
      `${androidModels.length} models with built-in Android OS`,
      `${wirelessModels.length} models support wireless connectivity`,
      'Pre-installed whiteboard and presentation software',
      'Compatible with Windows, Mac, iOS, and Android devices'
    ],
    relatedProducts: androidModels.slice(0, 2)
  }
];

const {
  title = 'Quick Reference Guides',
  subtitle = 'Essential information to help you make informed decisions'
} = Astro.props;
---

<section id="quick-guides" class="content-section">
  <div class="container">
    <div class="guides-header">
      <h2>{title}</h2>
      <p class="section-subtitle">{subtitle}</p>
    </div>

    <div class="guides-grid">
      {
        quickGuides.map((guide: QuickGuide) => (
          <div class="guide-card">
            <div class="guide-icon">{guide.icon}</div>
            <div class="guide-content">
              <div class="guide-category">{guide.category}</div>
              <h3>{guide.title}</h3>
              <p class="guide-description">{guide.description}</p>
              <ul class="guide-insights">
                {guide.insights.map((insight: string) => (
                  <li>{insight}</li>
                ))}
              </ul>
              {guide.relatedProducts && guide.relatedProducts.length > 0 && (
                <div class="guide-products">
                  <span class="products-label">Related Models:</span>
                  <div class="product-tags">
                    {guide.relatedProducts.map((product: any) => (
                      <span class="product-tag">
                        {product.model} ({product.size}")
                      </span>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </div>
        ))
      }
    </div>

    <div class="guides-summary">
      <div class="summary-content">
        <h3>Need More Detailed Information?</h3>
        <p>Our comprehensive product database includes detailed specifications, comparisons, and recommendations for all {allModels.length} interactive display models.</p>
        <div class="summary-actions">
          <a href="/products/smartboards" class="btn-primary">Browse All Products</a>
          <a href="/quiz" class="btn-secondary">Find Your Perfect Match</a>
        </div>
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  @use './RelatedPostsSection.scss';
</style>
