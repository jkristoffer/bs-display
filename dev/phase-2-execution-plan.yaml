# Phase 2: Core Navigation Component - Execution Plan

phase_name: "Core Navigation Component"
estimated_duration: "3-4 hours"
critical_priority: "Fix hydration error by removing forwardRef"

execution_steps:
  - step: "Create new simplified Nav.tsx"
    file: "src/components/common/Nav/Nav.tsx"
    implementation:
      structure: |
        import React, { useState, useEffect } from 'react';
        import styles from './Nav.module.scss';
        
        // No forwardRef, no useImperativeHandle
        export default function Nav({ currentPath = '/' }) {
          // All state consolidated here
          const [isMobile, setIsMobile] = useState(false);
          const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
          const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
          const [searchOpen, setSearchOpen] = useState(false);
          
          // Core implementation
        }
      
      state_variables:
        - "isMobile: boolean - Track responsive state"
        - "mobileMenuOpen: boolean - Mobile menu visibility"
        - "activeDropdown: string | null - Which dropdown is open"
        - "searchOpen: boolean - Search visibility"
      
      key_requirements:
        - "NO React.forwardRef usage"
        - "NO useImperativeHandle"
        - "NO ref passing to child components"
        - "Simple functional component"
    
  - step: "Implement navigation structure"
    components_to_create:
      NavLink:
        purpose: "Simple link component without forwardRef"
        props: "href, children, isActive, isCTA"
        implementation: |
          function NavLink({ href, children, isActive, isCTA }) {
            const className = `${styles.navLink} ${isActive ? styles.active : ''} ${isCTA ? styles.cta : ''}`;
            return <a href={href} className={className}>{children}</a>;
          }
      
      navigation_items:
        - "{ href: '/', label: 'Home' }"
        - "{ href: '/products', label: 'Products', hasDropdown: true }"
        - "{ href: '/resources', label: 'Resources', hasDropdown: true }"
        - "{ href: '/contact', label: 'Get Quote', isCTA: true }"
    
  - step: "Add responsive behavior"
    implementation:
      - "useEffect to detect window resize"
      - "Update isMobile state at 1024px breakpoint"
      - "Close mobile menu on desktop resize"
    code_snippet: |
      useEffect(() => {
        const checkMobile = () => {
          setIsMobile(window.innerWidth < 1024);
          if (window.innerWidth >= 1024) {
            setMobileMenuOpen(false);
          }
        };
        checkMobile();
        window.addEventListener('resize', checkMobile);
        return () => window.removeEventListener('resize', checkMobile);
      }, []);
    
  - step: "Implement dropdown toggles"
    features:
      - "Click to toggle dropdowns"
      - "Track which dropdown is active"
      - "Close on click outside (Phase 3)"
    handlers: |
      const toggleDropdown = (dropdownName: string) => {
        setActiveDropdown(activeDropdown === dropdownName ? null : dropdownName);
      };
    
  - step: "Add active state detection"
    logic: |
      const isActive = (path: string) => {
        if (path === '/') return currentPath === '/';
        return currentPath.startsWith(path);
      };
    
  - step: "Test hydration fix"
    verification_steps:
      - "npm run build"
      - "Check browser console for hydration errors"
      - "Verify Nav renders without errors"
      - "Test basic interactions"
    expected_result: "No 'Cannot set properties of undefined' errors"
    
  - step: "Update Nav/index.astro"
    changes: |
      ---
      import Nav from './Nav.tsx';
      const currentPath = Astro.url.pathname;
      ---
      
      <Nav client:only="react" currentPath={currentPath} />
    note: "Remove ClientNav wrapper, use Nav directly"

testing_checklist:
  - "[ ] Build completes without errors"
  - "[ ] No hydration errors in console"
  - "[ ] Navigation renders on page load"
  - "[ ] Links are clickable"
  - "[ ] Active states work"
  - "[ ] Responsive behavior at 1024px"
  - "[ ] Basic dropdown toggles work"

code_quality_checks:
  - "[ ] No forwardRef anywhere in Nav.tsx"
  - "[ ] No useImperativeHandle usage"
  - "[ ] All state in main Nav component"
  - "[ ] Clean, readable code structure"
  - "[ ] TypeScript types properly defined"

troubleshooting:
  hydration_errors:
    - "Check for any remaining forwardRef usage"
    - "Ensure React imports are correct"
    - "Verify client:only directive in Astro"
  
  build_errors:
    - "Check SCSS module imports"
    - "Verify all imports resolve correctly"
    - "Ensure TypeScript compiles"

deliverables:
  - "Simplified Nav.tsx without forwardRef"
  - "Working desktop navigation"
  - "No hydration errors"
  - "Basic dropdown functionality"
  - "Active state indicators"
  - "Responsive behavior"

success_criteria:
  - "Navigation renders without hydration errors ✓"
  - "All forwardRef usage removed ✓"
  - "State consolidated in single component ✓"
  - "Basic functionality working ✓"
  - "Ready for feature implementation ✓"